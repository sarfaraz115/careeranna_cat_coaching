{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animateScroll = undefined;\nexports.updateHistory = updateHistory;\n\nvar _requestanimationframeTimer = require('requestanimationframe-timer');\n\nvar animateScroll = exports.animateScroll = function () {\n  var timeoutId = void 0;\n  var resolvePrevious = void 0;\n  return function animateScroll(id, targetId, animate) {\n    var targetElement = document.getElementById(targetId);\n\n    function getScrollTop() {\n      // like jQuery -> $('html, body').scrollTop\n      return targetElement ? targetElement.scrollTop : document.documentElement.scrollTop || document.body.scrollTop;\n    }\n\n    function setScrollTop(position) {\n      if (targetElement) {\n        targetElement.scrollTop = position;\n      } else {\n        document.documentElement.scrollTop = document.body.scrollTop = position;\n      }\n    }\n\n    return new Promise(function (resolve, reject) {\n      var element = id ? document.getElementById(id) : document.body;\n\n      if (!element) {\n        return reject(new Error('Cannot find element: #' + id));\n      }\n\n      function getOffsetTop() {\n        var parentOffsetTop = targetElement ? targetElement.getBoundingClientRect().top : 0;\n        return element.getBoundingClientRect().top - parentOffsetTop + getScrollTop();\n      }\n\n      var offset = animate.offset,\n          duration = animate.duration,\n          easing = animate.easing;\n      var start = getScrollTop();\n      var to = getOffsetTop(element) + offset;\n      var change = to - start;\n\n      function animateFn() {\n        var elapsedTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var increment = 20;\n        var elapsed = elapsedTime + increment;\n        var position = easing(null, elapsed, start, change, duration);\n        setScrollTop(position);\n\n        if (elapsed < duration) {\n          timeoutId = (0, _requestanimationframeTimer.setTimeout)(function () {\n            animateFn(elapsed);\n          }, increment);\n        } else {\n          timeoutId = undefined;\n          return resolve(id);\n        }\n      }\n\n      if (timeoutId) {\n        (0, _requestanimationframeTimer.clearTimeout)(timeoutId);\n        resolvePrevious();\n      }\n\n      resolvePrevious = resolve;\n      animateFn();\n    });\n  };\n}();\n\nfunction updateHistory(id) {\n  id = '#' + id;\n\n  if (history.pushState) {\n    history.pushState(null, null, id);\n  } else {\n    location.hash = id;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}